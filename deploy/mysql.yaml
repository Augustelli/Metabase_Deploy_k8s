# StateFull Set

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
spec:
  serviceName: "mysql"
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.4
          ports:
            - containerPort: 3306
          args:
            - --mysql-native-password=ON
          readinessProbe:
            exec:
              command: ['mysqladmin', 'ping', '-h', 'localhost']
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-persistent-storage
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
---

# Service
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306


---

# Job

apiVersion: batch/v1
kind: Job
metadata:
  name: mysql-setup
spec:
  template:
    spec:
      containers:
        - name: mysql-client
          image: mysql:8.4
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Install wget
              microdnf update && microdnf install -y wget && microdnf clean all
              
              # Download the SQL file
              wget -O data.sql "https://drive.google.com/uc?export=download&id=1AC2uvs6f2t4qrhXpz5XowSxoVXR3TfvG"
              
              
              # Check if the file was downloaded successfully
              if [ ! -f data.sql ]; then
                echo "Failed to download data.sql"
                exit 1
              fi
              
              # Execute SQL commands
              
              mysql -h mysql -u root -proot <<EOF
              CREATE DATABASE IF NOT EXISTS google;
              ALTER USER 'metabase'@'%' IDENTIFIED WITH mysql_native_password BY 'password';
              GRANT ALL PRIVILEGES ON metabase.* TO 'metabase'@'%';
              GRANT ALL PRIVILEGES ON google.* TO 'metabase'@'%';
              FLUSH PRIVILEGES;
              EOF
              
              # Import the SQL file
              mysql -h mysql -u root -proot google < data.sql
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_ROOT_PASSWORD
      restartPolicy: OnFailure